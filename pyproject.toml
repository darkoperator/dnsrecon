[project]
name = "dnsrecon"
description = "DNS Enumeration Script"
readme = "README.md"
authors = [{ name = "Carlos Perez", email = "carlos_perez@darkoperator.com" }]
requires-python = ">=3.12"
urls.Homepage = "https://github.com/darkoperator/dnsrecon"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "Operating System :: OS Independent",
]
dynamic = ["version"]
dependencies = [
    "dnspython>=2.8.0",
    "netaddr",
    "lxml",
    "requests",
    "httpx==0.28.1",
    "loguru",
    "fastapi==0.120.3",
    "uvicorn[standard]==0.38.0",
    "slowapi==0.1.9",
    "stamina==25.1.0",
    "ujson==5.11.0"
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.2",
    "pytest-asyncio==1.2.0",
    "ruff==0.14.2",
    "setuptools",
    "pyupgrade",
    "types-ujson==5.10.0.20250822"
]

[project.scripts]
dnsrecon = "dnsrecon.__main__:main"
restdnsrecon = "dnsrecon.api_cli:main"

[tool.setuptools.dynamic]
version = { attr = "dnsrecon.cli.__version__" }

[tool.setuptools.packages.find]
include = ["dnsrecon*"]

[tool.setuptools.package-data]
"*" = ["*.txt"]

[build-system]
requires = ["setuptools>=68"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
minversion = "8.0.0"
addopts = "--no-header"
testpaths = [
    "tests",
    "tests/discovery/",
]


[tool.mypy]
python_version = "3.12"
warn_unused_configs = true
ignore_missing_imports = true
show_traceback = true
show_error_codes = true
namespace_packages = true

[tool.uv]
python-preference = "managed"

[tool.uv.pip]
python-version = "3.12"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    "tests",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".mypy_cache",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".github",
    ".venv",
    ".vscode",
    ".idea",
    "__pypackages__",
    "build",
    "dist",
    "site-packages",
    "venv",
]

line-length = 130
target-version = "py312"
show-fixes = true

[tool.ruff.lint]
select = ["E4",
    "E7",
    "E9",
    "F",
    "I",
    "UP",
    "TCH",
    "FA",
    "RUF",
    "PT",
    ]
ignore = ["E721", "F403", "F405", "F811", "UP030", "RUF059"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
